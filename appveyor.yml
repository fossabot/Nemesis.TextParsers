version: '{build}'
image: Visual Studio 2019
configuration: Release
init:
- pwsh: >-    
    if ($env:APPVEYOR_REPO_TAG -eq "true")
    {
        $newVersion = "$($env:APPVEYOR_REPO_TAG_NAME.TrimStart("v"))"
        Add-AppveyorMessage -Message ("Running release build")
    }
    else
    {
        $newVersion = "0.0.$env:APPVEYOR_BUILD_NUMBER+dev-$($env:APPVEYOR_REPO_COMMIT.Substring(0, 7))"                
    }
    Add-AppveyorMessage -Message ("Change build version to " + $newVersion)
    
    Update-AppveyorBuild -Version $newVersion
dotnet_csproj:
  patch: true
  file: '**\*.csproj;**\*.props'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'
before_build:
- ps: >-
    nuget restore

    if ($env:APPVEYOR_REPO_TAG_NAME)
    {
        $releaseNotes = & $([scriptblock]::Create((New-Object Net.WebClient).DownloadString( 'https://raw.githubusercontent.com/nemesissoft/BuildTools/master/GetGithubReleaseNotes.ps1' ))) -tagName "$env:APPVEYOR_REPO_TAG_NAME" -repoName "$env:APPVEYOR_REPO_NAME"
    
        if($releaseNotes)
        {
            $shortDesc = $releaseNotes.Item1
            $longDesc = $releaseNotes.Item2

            Update-AppveyorBuild -Message "$shortDesc"

            & $([scriptblock]::Create((New-Object Net.WebClient).DownloadString( 'https://raw.githubusercontent.com/nemesissoft/BuildTools/master/UpdateReleaseNotes.ps1' ))) -basePath "$env:APPVEYOR_BUILD_FOLDER" -releaseNotes "$longDesc"
        }        
    }
build:
  verbosity: normal
artifacts:
- path: '**\*.nupkg'
  name: NuGet Packages
- path: '**\*.snupkg'
  name: NuGet Symbols Packages
deploy:
- provider: NuGet
  api_key:
    secure: XyVG3PRBI5tLSQspgbO7GHv8WB0z8DLqiMs18lsZUNQP1XpvDhlsNn2mPIV+ea3o
  on:
    branch: master
    APPVEYOR_REPO_TAG: true